{'openapi': '3.0.2', 'info': {'title': 'FastAPI', 'version': '0.1.0'}, 'paths': {'/users/': {'get': {'summary': 'Read Users', 'operationId': 'read_users_users__get', 'parameters': [{'required': False, 'schema': {'title': 'Skip', 'type': 'integer', 'default': 0}, 'name': 'skip', 'in': 'query'}, {'required': False, 'schema': {'title': 'Limit', 'type': 'integer', 'default': 100}, 'name': 'limit', 'in': 'query'}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'title': 'Response Read Users Users  Get', 'type': 'array', 'items': {'$ref': '#/components/schemas/User'}}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}, 'post': {'summary': 'Create User', 'operationId': 'create_user_users__post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserCreate'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/users/{username}': {'get': {'summary': 'Read User', 'operationId': 'read_user_users__username__get', 'parameters': [{'required': True, 'schema': {'title': 'Username', 'type': 'string'}, 'name': 'username', 'in': 'path'}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/users/{username}/companions/': {'post': {'summary': 'Create Companion For User', 'operationId': 'create_companion_for_user_users__username__companions__post', 'parameters': [{'required': True, 'schema': {'title': 'Username', 'type': 'string'}, 'name': 'username', 'in': 'path'}], 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CompanionCreate'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Companion'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/companions/': {'get': {'summary': 'Read Companions', 'operationId': 'read_companions_companions__get', 'parameters': [{'required': False, 'schema': {'title': 'Skip', 'type': 'integer', 'default': 0}, 'name': 'skip', 'in': 'query'}, {'required': False, 'schema': {'title': 'Limit', 'type': 'integer', 'default': 100}, 'name': 'limit', 'in': 'query'}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'title': 'Response Read Companions Companions  Get', 'type': 'array', 'items': {'$ref': '#/components/schemas/Companion'}}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/users/token/test': {'get': {'summary': 'Test Token', 'operationId': 'test_token_users_token_test_get', 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}}, 'security': [{'OAuth2PasswordBearer': []}]}}, '/companions/event': {'post': {'summary': 'Create Event', 'operationId': 'create_event_companions_event_post', 'parameters': [{'required': True, 'schema': {'title': 'Companion Id', 'type': 'integer'}, 'name': 'companion_id', 'in': 'query'}], 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EventCreate'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}, 'security': [{'OAuth2PasswordBearer': []}]}}, '/token': {'post': {'summary': 'Login', 'operationId': 'login_token_post', 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'$ref': '#/components/schemas/Body_login_token_post'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Token'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}}, 'components': {'schemas': {'Body_login_token_post': {'title': 'Body_login_token_post', 'required': ['username', 'password'], 'type': 'object', 'properties': {'grant_type': {'title': 'Grant Type', 'pattern': 'password', 'type': 'string'}, 'username': {'title': 'Username', 'type': 'string'}, 'password': {'title': 'Password', 'type': 'string'}, 'scope': {'title': 'Scope', 'type': 'string', 'default': ''}, 'client_id': {'title': 'Client Id', 'type': 'string'}, 'client_secret': {'title': 'Client Secret', 'type': 'string'}}}, 'Companion': {'title': 'Companion', 'required': ['name', 'companion_type', 'notes', 'image', 'username_id', 'companion'], 'type': 'object', 'properties': {'name': {'title': 'Name', 'type': 'string'}, 'companion_type': {'$ref': '#/components/schemas/CompanionType'}, 'notes': {'title': 'Notes', 'type': 'string'}, 'image': {'title': 'Image', 'type': 'string'}, 'username_id': {'title': 'Username Id', 'type': 'string'}, 'companion': {'title': 'Companion', 'type': 'integer'}}}, 'CompanionCreate': {'title': 'CompanionCreate', 'required': ['name', 'companion_type', 'notes', 'image'], 'type': 'object', 'properties': {'name': {'title': 'Name', 'type': 'string'}, 'companion_type': {'$ref': '#/components/schemas/CompanionType'}, 'notes': {'title': 'Notes', 'type': 'string'}, 'image': {'title': 'Image', 'type': 'string'}}}, 'CompanionType': {'title': 'CompanionType', 'enum': ['plant', 'dog', 'cat', 'reptile'], 'type': 'string', 'description': 'An enumeration.'}, 'EventCreate': {'title': 'EventCreate', 'required': ['name', 'notes', 'priority', 'frequency', 'action'], 'type': 'object', 'properties': {'name': {'title': 'Name', 'type': 'string'}, 'notes': {'title': 'Notes', 'type': 'string'}, 'priority': {'$ref': '#/components/schemas/PriorityType'}, 'frequency': {'title': 'Frequency', 'type': 'string', 'format': 'date-time'}, 'action': {'title': 'Action', 'type': 'null'}}}, 'HTTPValidationError': {'title': 'HTTPValidationError', 'type': 'object', 'properties': {'detail': {'title': 'Detail', 'type': 'array', 'items': {'$ref': '#/components/schemas/ValidationError'}}}}, 'PriorityType': {'title': 'PriorityType', 'enum': ['l', 'm', 'h'], 'type': 'string', 'description': 'An enumeration.'}, 'Token': {'title': 'Token', 'required': ['access_token', 'token_type'], 'type': 'object', 'properties': {'access_token': {'title': 'Access Token', 'type': 'string'}, 'token_type': {'title': 'Token Type', 'type': 'string'}}}, 'User': {'title': 'User', 'required': ['username', 'hashed_password', 'is_active'], 'type': 'object', 'properties': {'username': {'title': 'Username', 'type': 'string'}, 'hashed_password': {'title': 'Hashed Password', 'type': 'string'}, 'is_active': {'title': 'Is Active', 'type': 'boolean'}, 'Companions': {'title': 'Companions', 'type': 'array', 'items': {'$ref': '#/components/schemas/Companion'}, 'default': []}}}, 'UserCreate': {'title': 'UserCreate', 'required': ['username', 'password'], 'type': 'object', 'properties': {'username': {'title': 'Username', 'type': 'string'}, 'password': {'title': 'Password', 'type': 'string'}}}, 'ValidationError': {'title': 'ValidationError', 'required': ['loc', 'msg', 'type'], 'type': 'object', 'properties': {'loc': {'title': 'Location', 'type': 'array', 'items': {'type': 'string'}}, 'msg': {'title': 'Message', 'type': 'string'}, 'type': {'title': 'Error Type', 'type': 'string'}}}}, 'securitySchemes': {'OAuth2PasswordBearer': {'type': 'oauth2', 'flows': {'password': {'scopes': {}, 'tokenUrl': 'token'}}}}}}
